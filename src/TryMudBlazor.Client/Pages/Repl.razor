@page "/snippet/{snippetId?}"
@layout MainLayout

<style>
    .try-drawer {
        width: var(--mud-drawer-width-mini-left) !important;
        overflow: hidden;
    }

    .try-editor {
        margin-left: var(--mud-drawer-width-mini-left) !important;
    }

    .try-avatar {
        border-color: var(--try-drawer-text);
        color: var(--try-drawer-text);
    }
</style>

<div class="try-layout">
    <MudDrawer Open="true" Fixed="false" Elevation="1" Breakpoint="Breakpoint.None" Variant="@DrawerVariant.Persistent" Class="try-drawer mud-drawer-mini">
        <div class="top-buttons">
            <MudTooltip Text="Run (Ctrl + S)" Placement="Placement.Bottom">
                <MudIconButton OnClick="@CompileAsync"
                               Disabled="@Loading"
                               Icon="@(LayoutService.IsDarkMode ? Icons.Material.Filled.PlayArrow : Icons.Material.Outlined.PlayArrow)"
                               Color="@(LayoutService.IsDarkMode ? Color.Success : Color.Inherit)" />
            </MudTooltip>

            <MudTooltip Text="Save" Placement="Placement.Right">
                <SaveSnippetPopup @bind-Visible="SaveSnippetPopupVisible"
                                  CodeFiles="@CodeFiles.Values"
                                  UpdateActiveCodeFileContentAction="UpdateActiveCodeFileContent" />
                <MudIconButton OnClick="ShowSaveSnippetPopup"
                               Icon="@(LayoutService.IsDarkMode ? Icons.Material.Filled.Save : Icons.Material.Outlined.Save)"
                               Class="save-button"
                               Color="@(LayoutService.IsDarkMode ? Color.Info : Color.Inherit)" />
            </MudTooltip>

            <MudTooltip Text="@(LayoutService.IsDarkMode ? "Light mode" : "Dark mode")" Placement="Placement.Right">
                <MudIconButton OnClick="@UpdateTheme"
                               Icon="@(LayoutService.IsDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Outlined.DarkMode)"
                               Class="dark-button"
                               Color="@(LayoutService.IsDarkMode ? Color.Warning : Color.Inherit)" />
            </MudTooltip>
        </div>

        <span class="brand">Try MudBlazor</span>

        <div class="bottom-buttons">
            <MudTooltip Text="Clear cache" Placement="Placement.Right">
                <MudIconButton OnClick="@ClearCache"
                               Icon="@(LayoutService.IsDarkMode ? Icons.Material.Filled.Cached : Icons.Material.Outlined.Cached)"
                               Class="cache-button"
                               Color="@(LayoutService.IsDarkMode ? Color.Default : Color.Inherit)" />
            </MudTooltip>
        </div>
    </MudDrawer>
    <div class="try-editor">
        <MudOverlay Visible="Loading" Absolute="true" DarkBackground="true">
            <MudText Typo="Typo.h4" Class="white-text"> @LoaderText</MudText>
        </MudOverlay>
        <div id="user-code-editor-container">
            <TabManager Tabs="@CodeFileNames" OnTabActivate="@HandleTabActivate" OnTabClose="@HandleTabClose" OnTabCreate="@HandleTabCreate" />
            <CodeEditor @ref="@CodeEditorComponent" Code="@CodeEditorContent" CodeFileType="@CodeFileType" />
            <ErrorList @bind-Show="@ShowDiagnostics" Diagnostics="@Diagnostics" />
        </div>
        <div id="user-page-window-container">
            <iframe id="user-page-window" src="/user-page" style="height: 98vh;"></iframe>
        </div>
    </div>
    <MudAppBar Bottom="true" Fixed="true" Color="@GetBottomAppBarColor()" Elevation="0" Class="try-errorlist repl-navbar">
        <div class="try-errorlist-button d-flex align-center" @onclick="@ToggleDiagnostics">
            <MudIcon Icon="@Icons.Material.Outlined.ErrorOutline" />
            <MudText>@ErrorsCount</MudText>
            <MudIcon Icon="@Icons.Material.Outlined.WarningAmber" />
            <MudText>@WarningsCount</MudText>
            @if (ErrorsCount != 0 || WarningsCount != 0)
            {
                <MudIcon Icon="@(ShowDiagnostics ? $"{Icons.Material.Outlined.ExpandMore}" : $"{Icons.Material.Outlined.ExpandLess}")" />
            }
        </div>
        <MudSpacer />
        <MudLink Typo="Typo.body2" Class="ml-10 version-info" Color="Color.Inherit" Href="https://dotnet.microsoft.com/download" Target="_blank">.net @Environment.Version.ToString()</MudLink>
        <MudLink Typo="Typo.body2" Class="ml-5 version-info" Color="Color.Inherit" Href="https://github.com/MudBlazor/MudBlazor/releases" Target="_blank">mudblazor @Version</MudLink>
    </MudAppBar>
</div>
@code {

    public Color GetBottomAppBarColor()
    {
        if (ErrorsCount != 0)
        {
            return Color.Error;
        }

        if (WarningsCount != 0)
        {
            return Color.Warning;
        }

        return Color.Inherit;
    }
}